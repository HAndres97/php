/* 
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Other/SQLTemplate.sql to edit this template
 */
/**
 * Author:  hchri
 * Created: 5 mar 2024

    SUBCONSULTAS
- SON CONSULTAS QUE SE EJECUTAN DENTRO DE OTRAS
- CONSISTE EN UTILIZAR LOS RESULATADOS DE LA SUBCONSULTA PARA OPERRAR EN LA
CONSULTA PRINCIPAL.
- USANDO LAS CLAVES AJENAS Y LA INTEGRIDAD REFERENCIAL

-USUMOS IN, NOT IN, = 
 */
# INSERTAMOS UN NUEVO USUARIO
INSERT INTO usuarios VALUES(NULL,"ADMIN","ADMIN","ADMIN@ADMIN","ADMIN",CURDATE());
# IN EXISTE DENTRO, CUANDO PUEDE DEVOLVER VARIOS RESULTADOS
# SELECCIONAME TODOS LOS USUARIOS QUE TENGAN ID EN ENTRADAS
SELECT * FROM USUARIOS WHERE ID IN (SELECT USUARIO_ID FROM ENTRADAS);

# LO MISMO, PERO NO EXISTE ID DE USUARIOS EN LAS ID_USUARIOS DE ENTRADAS
SELECT * FROM USUARIOS WHERE ID NOT IN (SELECT USUARIO_ID FROM ENTRADAS);

# SACAR LOS USUARIOS QUE TENGAN ALGUNA ENTRADA QUE EN SU TITULO HABLE DE GTA
 INSERT INTO ENTRADAS VALUES(NULL,3,1,'GUIA DE GTA VICE CITY','GTA',CURDATE());
# INSERTAMOS UNA ENTRADA MAS PARA QUE NO SALGA SOLO 1
SELECT NOMBRE,APELLIDOS FROM USUARIOS WHERE ID
 IN
(SELECT USUARIO_ID FROM ENTRADAS WHERE TITLE LIKE "%GTA%");

# SACAR TODAS LAS ENTRADAS DE LA CATEGORIA ACCION UTILIZANDO SU NOMBRE.
# FORMA DE DECIRLO "Sacame los titulos de entrada cuya categoria 
# id este contenida en la tabla de categorias cuando esa categoria se llame accion"
SELECT TITULO FROM ENTRADAS WHERE CATEGORIA_ID
 IN 
(SELECT ID FROM CATEGORIAS WHERE NOMBRE = "ACCION" );

# MOSTRAR LAS CATEGORIAS CON MAS DE 3 O MAS ENTRADAS
/* 
COMO PENSABA QUE ERA
SELECT NOMBRE FROM CATEGORIAS WHERE ID
 IN
(SELECT CATEGORIA_ID FROM ENTRADAS GROUP BY CATEGORIA_ID HAVING SUM(CATEGORIA_ID)>3;

*/
SELECT NOMBRE FROM CATEGORIAS WHERE ID
IN
(SELECT CATEGORIA_ID FROM ENTRADAS GROUP BY CATEGORIA_ID HAVING COUNT(CATEGORIA_ID)>=3);
# MOSTRAR LOS USUARIOS QUE CREARON UNA ENTRADA UN MARTES
# LO HICE PERFECTO
SELECT * FROM USUARIOS WHERE ID
 IN
 (SELECT USUARIO_ID FROM ENTRADAS WHERE DAYNAME(FECHA)='TUESDAY');
# MOSTRAR EL NOMBRE DE EL USUARIO QUE TENGA MAS ENTRADAS
SELECT NOMBRE FROM USUARIOS WHERE ID IN (SELECT USUARIO_ID FROM ENTRADAS GROUP BY USUARIO_ID HAVING COUNT(MAX(USUARIO_ID)));
# MOSTRAR LAS CATEGORIAS SIN ENTRADAS.
SELECT NOMBRE FROM CATEGORIAS WHERE ID NOT IN (SELECT CATEGORIAS_ID FROM ENTRADAS);